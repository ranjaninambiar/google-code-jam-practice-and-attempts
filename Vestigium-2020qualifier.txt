import sys 
sys.setrecursionlimit(1000000000) 
class latinsq():
    def sudorow(self,mat,n):
        
        c=0
        f=0
        for i in mat:
            d={}
            for j in i:
                if(j in d):
                    f=1
                    break
                else:
                    d[j]=1
            if(f==1):
                c+=1
                f=0
        return(c)
    def isperm(self,mat,n):
        l1=[i for i in range(1,n+1)]
        for i in mat:
            l=i.sort()
            if(l==l1):
                continue
            else:
                return False
        return(True)
            
            
    def sudocol(self,mat,n):
        k=0
        c1=0
        f=0
        while(k<n):
            d={}
            i=0
            while(i<n):
                if(mat[i][k] in d):
                    f=1
                    break
                else:
                    d[mat[i][k]]=1
               
                i+=1
            if(f==1):
                c1+=1
                f=0
            k+=1
        return(c1)
        
    def trace(self,mat,n):
        k=0
        s=0
        while(k<n):
            s+=mat[k][k]
            k+=1
            #print(s)
        return(s)


t=int(input())
i=1
while(t>0):
    mat=[]
    n=int(input())
    n1=n
    while(n>0):
        l=list(map(int,input().split()))
        mat.append(l)
        n-=1
    lobj=latinsq()
    tr=lobj.trace(mat,n1)
    r=lobj.sudorow(mat,n1)
    c=lobj.sudocol(mat,n1)
    print("Case #"+str(i)+":",tr,r,c)
    t-=1
    i+=1

            
